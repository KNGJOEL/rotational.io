<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on Rotational Labs</title><link>https://rotational.io/blog/</link><description>Recent content in Blogs on Rotational Labs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright &amp;copy; 2021 Rotational Labs, LLC, All Rights Reserved</copyright><lastBuildDate>Wed, 19 May 2021 11:05:32 -0400</lastBuildDate><atom:link href="https://rotational.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>What Are Protocol Buffers?</title><link>https://rotational.io/blog/what-are-protocol-buffers/</link><pubDate>Wed, 19 May 2021 11:05:32 -0400</pubDate><guid>https://rotational.io/blog/what-are-protocol-buffers/</guid><description>Protocol buffers are a method for serializing data to efficiently send between programs. The structure is reminiscent of XML or JSON, but unlike these more commonly used text-based serialization methods, protocol buffers are designed to produce extremely compact messages using a binary format.</description></item><item><title>Contexts in Go Microservice Chains</title><link>https://rotational.io/blog/contexts-in-go-microservice-chains/</link><pubDate>Sun, 02 May 2021 14:24:33 -0400</pubDate><guid>https://rotational.io/blog/contexts-in-go-microservice-chains/</guid><description>Contexts are a critical part of services implemented in Golang. Although we see them often in server interfaces, they can be mysterious to developers implementing request handlers.</description></item><item><title>Can't Read, Won't Buy</title><link>https://rotational.io/blog/cant-read-wont-buy/</link><pubDate>Tue, 27 Apr 2021 11:24:40 -0400</pubDate><guid>https://rotational.io/blog/cant-read-wont-buy/</guid><description>To say we are not at our most empowered when trying to communicate in an unfamiliar language is a bit of an understatement.</description></item><item><title>A Distributed Systems Maze</title><link>https://rotational.io/blog/a-distributed-systems-maze/</link><pubDate>Tue, 06 Apr 2021 13:49:57 -0400</pubDate><guid>https://rotational.io/blog/a-distributed-systems-maze/</guid><description>The most exciting applications coming out these days are the ones that aim big â€” aspiring to reach a global audience of users across regions, languages, timezones, and data centers.</description></item><item><title>Project Planning With Block Based Dependencies</title><link>https://rotational.io/blog/project-planning-with-block-based-dependencies/</link><pubDate>Wed, 24 Mar 2021 07:49:48 -0400</pubDate><guid>https://rotational.io/blog/project-planning-with-block-based-dependencies/</guid><description>Good software development achieves complexity by describing the interactions of simple components. Of course, this is harder than it sounds, and if Mark Twain had been a software developer he would have likely said: &amp;ldquo;if I had more time, I would have created a simpler design.</description></item><item><title>A Parrot Trainer Eats Crow</title><link>https://rotational.io/blog/a-parrot-trainer-eats-crow/</link><pubDate>Fri, 19 Mar 2021 08:42:21 -0400</pubDate><guid>https://rotational.io/blog/a-parrot-trainer-eats-crow/</guid><description>In this post, we&amp;rsquo;ll consider how it is that models trained on massive datasets using millions of parameters can be both &amp;ldquo;low bias&amp;rdquo; and also very biased, and begin to think through what we in the ML community might be able to do about it.</description></item><item><title>Documenting a gRPC API with OpenAPI</title><link>https://rotational.io/blog/documenting-grpc-with-openapi/</link><pubDate>Thu, 21 Jan 2021 17:45:35 +0000</pubDate><guid>https://rotational.io/blog/documenting-grpc-with-openapi/</guid><description>gRPC makes the specification and implementation of networked APIs a snap. But what is the simplest way to document a gRPC API?</description></item><item><title>Why UX Will Get Worse Before it Gets Better</title><link>https://rotational.io/blog/ux-whats-missing/</link><pubDate>Sun, 19 Jul 2020 15:46:00 +0000</pubDate><guid>https://rotational.io/blog/ux-whats-missing/</guid><description>The things we make are not user-friendly by accident; we have to make them that way.</description></item></channel></rss>